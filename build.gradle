version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.1.1'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'groovy'
apply plugin: 'application'

sourceCompatibility = 1.8
mainClassName = 'tucanChecker.MainKt'


repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
	compile 'org.jsoup:jsoup:1.9.1'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.8.7'

    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-jackson:2.0.2'

    compile 'org.slf4j:slf4j-api:1.7.22'
    compile 'ch.qos.logback:logback-classic:1.1.8'

    testCompile 'org.codehaus.groovy:groovy-all:2.4.7'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
}

// workaround because adding the config file directly in dist and runtime results in a
// wrong classpath, since 'lib' is added as a prefix

// see http://stackoverflow.com/questions/30491345/how-do-i-specify-an-extra-folder-to-be-on-the-classpath-for-gradles-application
// and https://issues.gradle.org/browse/GRADLE-2991

run {
    classpath += files('src/dist/lib/conf')
}

startScripts {
    classpath += files('src/dist/lib/conf')
}